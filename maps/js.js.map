{"version":3,"sources":["collision.js","enemy.js","init.js","key.js","score.js","shooter.js","shootyshoot-data.js","shootyshoot.js","shot.js","state.js","view.js"],"names":["Lose","enemies","shooter","_shooterCollision","Hit","shots","_shotCollision","i","length","enemyBottom","y","r","shooterTop","hit","_shotCollisionEachEnemy","enemy","enemyI","_shotCollisionEachShot","shot","shotI","enemyEdge","top","bottom","left","x","right","window","Enemy","this","data","rowN","colN","moveMultp","rowWmultp","shiftWmultp","rowW","shiftW","shiftH","enemyR","shiftV","xDelta","yDelta","movingRight","movingDown","prototype","init","z","v","enemiesAndGapsN","defaultX","defaultY","n","initEachEnemy","state","shift","push","animate","movement","processState","_moveEnemiesDown","_moveEnemiesHorizontally","_processEach","d","_incrementDownwardMovement","_movingDownIsComplete","map","_moveEnemyDown","_incrementHorizontalMovement","_movingHorizontallyIsComplete","_moveEnemyRight","_moveEnemyLeft","splice","touchScreen","playBtnListeners","State","set","document","removeEventListener","addEventListener","btns","getElementsByClassName","ShootyShoot","play","isTouchScreen","alert","navigator","MaxTouchPoints","msMaxTouchPoints","key","listen","keyDown","keyUp","ev","keyCode","keyLeft","keyRight","keyShoot","Score","els","initEnemies","hits","accuracy","draw","_setElText","setGetAccuracy","_calcPercentage","actual","possible","p","Math","round","txt","textContent","Shooter","defaultOpacity","shootOpacity","currentOpacity","wMultp","isMovingLeft","isMovingRight","isShooting","delayShot","stall","isLeftRightStall","moveLeft","moveRight","fadingOpacity","x0","m","x1","setShotOpacity","shshData","speed","isPlaying","el","game","getElementById","score","canvas","home","lose","win","homeH1","querySelector","homePlayBtn","playBtns","offsetWidth","load","Shot","drawScoreboard","ctx","getContext","width","height","clearRect","view","drawFromRequestAnimationFrame","shoot","requestAnimationFrame","bool","engageDelay","launch","setTimeout","releaseDelay","items","accel","s","_move","_isMiss","processStateEach","current","available","id","display","apply","clear","style","beginPath","fillStyle","arc","PI","fill","rect"],"mappings":"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","file":"js.js","sourcesContent":["(function(){ 'use strict';\n\n/*\n|\n|   collisions\n|\n*/\n\n/*\n|\n|   check if the game has been lost\n|\n|   ...the game is lost when one or more ememies reach the shooter\n|\n*/\nvar Lose = function( enemies, shooter )\n{\n    //\n    //  check for enemy collision with shooter\n    //\n    if ( _shooterCollision(enemies, shooter) )\n        return true;\n\n    return false;\n};\n\n/*\n|\n|   check for hit\n|\n|   ...a hit (or kill) occurs when a shot collides with an enemy\n|\n*/\nvar Hit = function( enemies, shots )\n{\n    //\n    //  check for enemy collision with shot\n    //\n    return _shotCollision(enemies, shots);\n};\n\n/*\n|\n|   helper function used in Lose()\n|\n*/\nvar _shooterCollision = function( enemies, shooter )\n{\n    for ( var i = enemies.length - 1; i >= 0; i-- )\n    {\n        var enemyBottom = enemies[i].y + enemies[i].r,\n            shooterTop  = shooter.y - shooter.r;\n\n        if ( enemyBottom > shooterTop )\n            return true;\n    }\n\n    return false;\n};\n\n/*\n|\n|   helper function used in Hit()\n|\n*/\nvar _shotCollision = function( enemies, shots )\n{\n    if ( !enemies.length )\n        return false;\n\n    if ( !shots.length )\n        return false;\n\n    //\n\n    var hit = false;\n\n    for ( var i = enemies.length - 1; i >= 0; i-- )\n    {\n        hit = _shotCollisionEachEnemy( enemies[i], i, shots );\n\n        if ( hit )\n            return hit;\n    }\n\n    return false;\n};\n\n/*\n|\n|   helper function used in _shotCollision()\n|\n*/\nvar _shotCollisionEachEnemy = function( enemy, enemyI, shots )\n{\n    var hit = false;\n\n    for ( var i = shots.length - 1; i >= 0; i-- )\n    {\n        hit = _shotCollisionEachShot( enemy, enemyI, shots[i], i );\n\n        if ( hit )\n            return hit;\n    }\n\n    return false;\n};\n\n/*\n|\n|   helper function used in _shotCollisionEachEnemy()\n|\n*/\nvar _shotCollisionEachShot = function( enemy, enemyI, shot, shotI )\n{\n    var enemyEdge = {};\n    enemyEdge.top    = enemy.y - enemy.r;\n    enemyEdge.bottom = enemy.y + enemy.r;\n    enemyEdge.left   = enemy.x - enemy.r;\n    enemyEdge.right  = enemy.x + enemy.r;\n\n    //\n    //  return false if shot missed all enemies\n    //\n    if ( shot.y < enemyEdge.top)\n        return false;\n\n    if ( shot.y > enemyEdge.bottom )\n        return false;\n\n    if ( shot.x < enemyEdge.left )\n        return false;\n\n    if ( shot.x > enemyEdge.right )\n        return false;\n\n    //\n    //  no misses means there was a hit\n    //  return the enemy and shot that should be deactivated\n    //\n    return {\n        'enemy' : enemyI,\n        'shot'  : shotI,\n    };\n};\n\nwindow.Lose = Lose;\nwindow.Hit  = Hit;\n\n})();\n\n// EOF","(function(){ 'use strict';\n\n/*\n|\n|   enemy\n|\n*/\n\nvar Enemy = function()\n{\n    this.data = {\n\n        //\n        //  number of rows\n        //\n        rowN : 5,\n\n        //\n        //  number of enemies in each row\n        //\n        colN : 10,\n\n        //\n        //  enemy movement speed multiplier\n        //\n        moveMultp : 0.008,\n\n        //\n        //  row width multiplier and shift width multiplier should add up to 1\n        //\n        rowWmultp   : 0.7,\n        shiftWmultp : 0.3,\n\n        //\n        //  data for state of each enemy\n        //\n        enemies : [],\n\n        //\n        //  values set by init()\n        //\n        rowW    : 0,\n        shiftW  : 0,\n        shiftH  : 0,\n        enemyR  : 0,\n        shiftV  : 0,\n\n        //\n        //  track enemy shift direction\n        //\n        xDelta      : 0,\n        yDelta      : 0,\n        movingRight : true,\n        movingDown  : false,\n    };\n};\n\n/*\n|\n|   initialize enemies\n|\n*/\nEnemy.prototype.init = function( z, v )\n{\n    //\n    //  set global enemy values\n    //\n    this.data.rowW   = z * this.data.rowWmultp;\n    this.data.shiftW = z * this.data.shiftWmultp;\n    this.data.shiftV = this.data.moveMultp * z * v;\n    \n    var enemiesAndGapsN = ( this.data.colN * 2 ) - 1;  \n    this.data.enemyR    = ( this.data.rowW / enemiesAndGapsN ) / 2;\n\n    this.data.shiftH = this.data.enemyR;\n\n    //\n    //  initial values for enemy\n    //\n    var x = this.data.enemyR,\n        y = this.data.enemyR,\n        r = this.data.enemyR,\n        defaultX = x,\n        defaultY = y;\n\n    //\n    //  initialize each enemy\n    //\n    for ( var n = this.data.rowN - 1; n >= 0; n-- )\n    {\n        for ( var i = this.data.colN - 1; i >= 0; i-- )\n        {\n            this.initEachEnemy( x, y, r );        \n            x = x + ( r * 4 );\n        }\n\n        x = defaultX;\n        y = defaultY + ( r * 4 * n );\n    }\n};\n\n/*\n|\n|   initialize each enemy\n|\n*/\nEnemy.prototype.initEachEnemy = function( x, y, r )\n{\n    var enemy = {\n            x : x,\n            y : y,\n            r : r,\n            state : 'active',\n            shift : this.data.shiftV,\n        };\n\n    this.data.enemies.push( enemy );\n};\n\n/*\n|\n|   animate enemies\n|\n*/\nEnemy.prototype.animate = function()\n{\n    this.movement();\n    this.processState();\n};\n\n/*\n|\n|   determine enemy movement\n|\n*/\nEnemy.prototype.movement = function()\n{\n    if ( !this.data.enemies[0] )\n        return false;\n\n    this.data = ( this.data.movingDown ) ?\n        _moveEnemiesDown( this.data )    :\n        _moveEnemiesHorizontally( this.data );\n};\n\n/*\n|\n|   determine state of each enemies\n|\n*/\nEnemy.prototype.processState = function()\n{\n    for ( var i = this.data.enemies.length - 1; i >= 0; i-- )\n        _processEach( this.data.enemies[i], i, this.data.enemies );\n};\n\n/*\n|\n|   set an enemy's state to 'hit'\n|\n*/\nEnemy.prototype.hit = function( i )\n{\n    this.data.enemies[i].state = 'hit';\n};\n\n/*\n|\n|   helper function used in Enemy.prototype.movement()\n|\n*/\nvar _moveEnemiesDown = function( d )\n{\n    //\n    //  increment downward movement with yDelta\n    //\n    d = _incrementDownwardMovement( d );\n\n    //\n    //  check if done moving down\n    //\n    if ( d.yDelta >= d.shiftH )\n        d = _movingDownIsComplete( d );\n\n    //\n    //  adjust enemy postitions\n    //\n    d.enemies = d.enemies.map( _moveEnemyDown );\n\n    return d;\n};\n\n/*\n|\n|   helper function used in Enemy.prototype.movement()\n|\n*/\nvar _moveEnemiesHorizontally = function( d )\n{\n    //\n    //  increment downward movement with xDelta\n    //\n    d = _incrementHorizontalMovement( d );\n\n    //\n    //  check if done moving horizontally\n    //\n    if ( d.xDelta >= d.shiftW )\n        d = _movingHorizontallyIsComplete( d );\n\n    //\n    //  adjust enemy postitions\n    //\n    d.enemies = ( d.movingRight )        ?\n        d.enemies.map( _moveEnemyRight ) :\n        d.enemies.map( _moveEnemyLeft );\n\n    return d;\n};\n\n/*\n|\n|   helper function used in _moveEnemiesDown()\n|\n*/\nvar _incrementDownwardMovement = function( d )\n{\n    d.yDelta = d.yDelta + d.shiftV;\n\n    return d;\n};\n\n/*\n|\n|   helper function used in _moveEnemiesDown()\n|\n*/\nvar _movingDownIsComplete = function( d )\n{\n    d.movingDown    = false;\n    d.yDelta        = 0;\n\n    return d;\n};\n\n/*\n|\n|   helper function used in _moveEnemiesDown()\n|\n*/\nvar _moveEnemyDown = function( enemy )\n{\n    enemy.y = enemy.y + enemy.shift;\n\n    return enemy;\n};\n\n/*\n|\n|   helper function used in _moveEnemiesHorizontally()\n|\n*/\nvar _incrementHorizontalMovement = function( d )\n{\n    d.xDelta = d.xDelta + d.shiftV;\n\n    return d;\n};\n\n/*\n|\n|   helper function used in _moveEnemiesHorizontally()\n|\n*/\nvar _movingHorizontallyIsComplete = function( d )\n{\n    d.movingRight   = !d.movingRight;\n    d.xDelta        = 0;\n    d.movingDown    = true;\n\n    return d;\n};\n\n/*\n|\n|   helper function used in _moveEnemiesHorizontally()\n|\n*/\nvar _moveEnemyRight = function( enemy )\n{\n    enemy.x = enemy.x + enemy.shift;\n\n    return enemy;\n};\n\n/*\n|\n|   helper function used in _moveEnemiesHorizontally()\n|\n*/\nvar _moveEnemyLeft = function( enemy )\n{\n    enemy.x = enemy.x - enemy.shift;\n\n    return enemy;\n};\n\n/*\n|\n|   helper function used in Enemy.prototype.processState()\n|\n*/\nvar _processEach = function( enemy, enemyI, enemies )\n{\n    if ( enemy.state == 'hit' )\n        enemies.splice( enemyI, 1 );\n};\n\nwindow.Enemy = Enemy;\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   init\n|\n*/\n\nvar init = function()\n{\n    touchScreen();\n\n    playBtnListeners();\n\n    State.set( 'home' );\n\n    document.removeEventListener( \"DOMContentLoaded\", init );\n};\ndocument.addEventListener( 'DOMContentLoaded', init );\n\n/*\n|\n|   enable play buttons\n|\n*/\nvar playBtnListeners = function()\n{\n    var btns = document.getElementsByClassName( 'play-btn' );\n\n    for ( var i = btns.length - 1; i >= 0; i-- )\n        btns[i].addEventListener( 'click', ShootyShoot.play );\n};\n\n/*\n|\n|   touch screen notification\n|\n*/\nvar touchScreen = function()\n{\n    if ( isTouchScreen() )\n        alert( 'looks like you have a touch screen device.  this game will probably not work for you.  a regular keyboard is needed.' );\n};\n\n/*\n|\n|   check for touch screen device\n|\n*/\nvar isTouchScreen = function()\n{\n    return (\n        ('ontouchstart' in window)      ||\n        (navigator.MaxTouchPoints > 0)  ||\n        (navigator.msMaxTouchPoints > 0)\n    );\n};\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   keyboard commands\n|\n*/\n\nvar key = {\n\n    listen : function()\n    {\n        window.addEventListener( 'keydown', key.keyDown );\n        window.addEventListener( 'keyup', key.keyUp );\n    }\n};\n\n/*\n|\n|   key press\n|\n*/\nkey.keyDown = function( ev )\n{\n    //\n    //  left key\n    //\n    if ( ev.keyCode == 37 )\n        ShootyShoot.keyLeft( true );\n\n    //\n    // right key\n    //\n    if ( ev.keyCode == 39 )\n        ShootyShoot.keyRight( true );\n\n    //\n    // ctrl & space keys\n    //\n    if ( ev.keyCode == 17 || ev.keyCode == 32 )\n        ShootyShoot.keyShoot( true );\n};\n\n/*\n|\n|   key un press\n|\n*/\nkey.keyUp = function( ev )\n{\n    //\n    //  left key\n    //\n    if ( ev.keyCode == 37 )\n        ShootyShoot.keyLeft( false );\n\n    //\n    // right key\n    //\n    if ( ev.keyCode == 39 )\n        ShootyShoot.keyRight( false );\n\n    //\n    // ctrl & space keys\n    //\n    if ( ev.keyCode == 17 || ev.keyCode == 32 )\n        ShootyShoot.keyShoot( false );\n};\n\nwindow.key = key;\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   score\n|\n|   ...track score board stats\n|\n*/\n\nvar Score = function( enemies, els )\n{\n    this.data = {\n        initEnemies : enemies,\n        enemies     : enemies,\n        shots       : 0,\n        hits        : 0,\n        accuracy    : 0,\n    };\n\n    this.els = els;\n};\n\n/*\n|\n|   draw\n|\n|   ...display score stats in scoreboard\n|\n*/\nScore.prototype.draw = function()\n{\n    _setElText( this.els.shots, this.data.shots );\n    _setElText( this.els.hits, this.data.hits );\n    _setElText( this.els.accuracy, this.setGetAccuracy() );\n};\n\n/*\n|\n|   shot\n|\n|   ...record a new shot\n|\n*/\nScore.prototype.shot = function()\n{\n    this.data.shots++;\n    return this.data.shots;\n};\n\n/*\n|\n|   hit\n|\n|   ...record a new hit\n|\n*/\nScore.prototype.hit = function()\n{\n    this.data.hits++;\n    this.data.enemies--;\n\n    return this.data.hits;\n};\n\n/*\n|\n|   set/get accuracy\n|\n|   ...determine current accuracy and return that\n|\n*/\nScore.prototype.setGetAccuracy = function()\n{\n    //\n    //\n    //\n    if ( !this.data.shots )\n        return this.data.accuracy;\n\n    //\n    //\n    //\n    this.data.accuracy = _calcPercentage( this.data.hits, this.data.shots );\n\n    return this.data.accuracy;\n};\n\n/*\n|\n|   calculate percentage\n|\n*/\nvar _calcPercentage = function( actual, possible )\n{\n    var p = actual / possible;\n\n    p = p * 100;\n    p = Math.round( p );\n\n    return p;\n};\n\n/*\n|\n|   set element text\n|\n|   ...apply to scoreboard dom elements\n|\n*/\nvar _setElText = function( els, txt )\n{\n    for ( var i = els.length - 1; i >= 0; i-- )\n        els[i].textContent = txt;\n\n    return txt;\n};\n\n\nwindow.Score = Score;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   shooter\n|\n*/\n\nvar Shooter = function()\n{\n    //\n    //  data for the view\n    //\n    this.v = {\n\n        x : null,\n        y : null,\n        r : null,\n\n        defaultOpacity  : 0.5,\n        shootOpacity    : 0.7,\n        currentOpacity  : null,\n    };\n\n    //\n    // multipliers\n    //\n    this.wMultp      = 0.05;\n    this.moveMultp   = 0.01;\n\n    //\n    // actions\n    //\n    this.isMovingLeft    = false;\n    this.isMovingRight   = false;\n    this.isShooting    = false;\n    this.delayShot   = false;\n};\n\n/*\n|\n|   init\n|\n*/\nShooter.prototype.init = function( z )\n{\n    this.v.r = z * this.wMultp;\n    this.v.x = ( z / 2 );\n    this.v.y = z - this.v.r - 1;\n\n    this.v.currentOpacity = this.v.defaultOpacity;\n};\n\n/*\n|\n|   animate\n|\n*/\nShooter.prototype.animate = function( z )\n{\n    var stall = this.isLeftRightStall();\n\n    if ( this.isMovingLeft && !stall )\n        this.moveLeft( z );\n\n    if ( this.isMovingRight && !stall )\n        this.moveRight( z );\n\n    this.fadingOpacity();\n};\n\n/*\n|\n|   move left\n|\n*/\nShooter.prototype.moveLeft = function( z )\n{\n    var x0  = this.v.x,\n        r   = this.v.r,\n        m   = this.moveMultp,\n        x1  = x0 - ( z * m );\n\n    if ( x1 - r >= 1 )\n        this.v.x = x1;\n};\n\n/*\n|\n|   move right\n|\n*/\nShooter.prototype.moveRight = function( z )\n{\n    var x0  = this.v.x,\n        r   = this.v.r,\n        m   = this.moveMultp,\n        x1  = x0 + ( z * m );\n\n    if ( x1 + r <= z - 1 )\n        this.v.x = x1;\n};\n\n/*\n|\n|   stall sanity check\n|\n|   ...check if both left and right keys are pressed at the same time\n|\n*/\nShooter.prototype.isLeftRightStall = function()\n{\n    return this.isMovingLeft && this.isMovingRight;\n};\n\n/*\n|\n|   shot opacity\n|\n|   ...change the opacity when shot is fired\n|\n*/\nShooter.prototype.setShotOpacity = function()\n{\n    this.v.currentOpacity = this.v.shootOpacity;\n};\n\n/*\n|\n|   fade opacity\n|\n|   ...after shot is fired, begin fading back to original opacity\n|\n*/\nShooter.prototype.fadingOpacity = function()\n{\n    if ( this.v.currentOpacity > this.v.defaultOpacity )\n        this.v.currentOpacity = this.v.currentOpacity - 0.01;\n};\n\n\n\nwindow.Shooter = Shooter;\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   global game data\n|\n*/\n\nvar shshData = function()\n{\n    this.speed      = 0.5;\n    this.isPlaying  = false;\n    this.z          = 0;\n\n    this.el = {\n        game    : document.getElementById( 'shooty-shoot' ),\n        score   : document.getElementById( 'score' ),\n        canvas  : document.getElementById( 'shooty-shoot-canvas' ),\n        home    : document.getElementById( 'home' ),\n        lose    : document.getElementById( 'lose' ),\n        win     : document.getElementById( 'win' ),\n\n        homeH1      : document.querySelector( '#home h1' ),\n        homePlayBtn : document.getElementById( 'home-play-btn' ),\n    };\n\n    this.els = {\n        playBtns : document.getElementsByClassName( 'play-btn' ),\n        shots    : document.getElementsByClassName( 'shots' ),\n        hits     : document.getElementsByClassName( 'hits' ),\n        accuracy : document.getElementsByClassName( 'accuracy' ),\n        keyLeft  : document.getElementsByClassName( 'key-left' ),\n        keyRight : document.getElementsByClassName( 'key-right' ),\n        keyShoot : document.getElementsByClassName( 'key-shoot' ),\n    };\n};\n\nshshData.prototype.init = function()\n{\n    this.z = this.el.canvas.offsetWidth;\n};\n\nwindow.shshData = shshData;\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   shooty shoot\n|\n|   ...primary controller\n|\n*/\n\nvar ShootyShoot = {\n\n    data    : {},\n    shooter : {},\n    shot    : {},\n    enemy   : {},\n};\n\n/*\n|\n|   play\n|\n*/\nShootyShoot.play = function()\n{\n    State.set( 'shooty-shoot' );\n\n    ShootyShoot.load();\n};\n\n/*\n|\n|   load (initialize)\n|\n*/\nShootyShoot.load = function()\n{\n    //\n    //  global\n    //\n    this.data = new shshData();\n    this.data.init();\n\n    //\n    //  keyboard listeners\n    //\n    key.listen();\n\n    //\n    //  shooter\n    //\n    this.shooter = new Shooter();\n    this.shooter.init( this.data.z );\n\n    //\n    //  enemies\n    //\n    this.enemy = new Enemy();\n    this.enemy.init( this.data.z, this.data.speed );\n\n    //\n    //  shot\n    //\n    this.shot = new Shot();\n    this.shot.init( this.data.z );\n\n    //\n    //  score board\n    //\n    this.score = new Score( this.enemy.data.enemies.length, this.data.els );\n    this.drawScoreboard();\n\n    //\n    //  draw\n    //\n    this.data.isPlaying = true;\n    this.draw();\n};\n\n/*\n|\n|   draw each frame\n|\n*/\nShootyShoot.draw = function()\n{\n    //\n    //  canvas\n    //\n    var ctx = this.data.el.canvas.getContext( '2d' );\n    ctx.canvas.width  = this.data.z;\n    ctx.canvas.height = this.data.z;\n    ctx.clearRect( 0, 0, this.data.z, this.data.z );\n\n    //\n    //  draw elements\n    //\n    view.shooter( this.shooter.v, ctx );\n    view.shots( this.shot.data, ctx );\n    view.enemies( this.enemy.data.enemies, ctx );\n\n    //\n    //  animate data for next frame\n    //\n    this.animate();\n};\nShootyShoot.drawFromRequestAnimationFrame = function()\n{\n    ShootyShoot.draw();\n};\n\n/*\n|\n|   animate\n|\n|   ...adjust data for next frame\n|\n*/\nShootyShoot.animate = function()\n{\n    //\n    //  check for win\n    //\n    if ( !this.enemy.data.enemies[0] )\n        this.win();\n\n    //\n    //  shooter actions\n    //\n    this.shooter.animate( this.data.z );\n\n    if ( this.shooter.isShooting )\n        this.shoot();\n\n    //\n    //  shots\n    //\n    this.shot.animate();\n\n    //\n    //  enemy movement\n    //\n    this.enemy.animate();\n\n    //\n    //  check for collisions\n    //\n    var lose = Lose( this.enemy.data.enemies, this.shooter.v );\n    if ( lose )\n        this.lose();\n\n    var hit = Hit( this.enemy.data.enemies, this.shot.data );\n    if ( hit )\n        this.hit( hit );\n\n    //\n    //  draw next frame\n    //\n    if ( this.data.isPlaying )\n        window.requestAnimationFrame( this.drawFromRequestAnimationFrame );\n};\n\n/*\n|\n|   process keyboard events\n|\n*/\nShootyShoot.keyLeft = function( bool )\n{\n    this.shooter.isMovingLeft = bool;    \n};\nShootyShoot.keyRight = function( bool )\n{\n    this.shooter.isMovingRight = bool;\n};\nShootyShoot.keyShoot = function( bool )\n{\n    this.shooter.isShooting = bool;\n};\n\n/*\n|\n|   process a shot\n|\n*/\nShootyShoot.shoot = function()\n{\n    //\n    //  shot delay\n    //\n    if ( this.shooter.delayShot )\n        return false;\n\n    this.engageDelay();\n\n    //\n    //  shooter\n    //\n    this.shooter.setShotOpacity();\n\n    //\n    //  shot\n    //\n    this.shot.launch( this.shooter.v );\n\n    //\n    //  score board\n    //\n    this.score.shot();\n};\n\n/*\n|\n|   engage shot delay\n|\n|   ...delay shots a bit, no need to shoot on every frame\n|\n*/\nShootyShoot.engageDelay = function()\n{\n    this.shooter.delayShot = true;\n    window.setTimeout( this.releaseDelay, 300);\n};\n\n/*\n|\n|   release shot delay\n|\n*/\nShootyShoot.releaseDelay = function()\n{\n    ShootyShoot.shooter.delayShot = false;\n};\n\n/*\n|\n|   scoreboard\n|\n*/\nShootyShoot.drawScoreboard = function()\n{\n    ShootyShoot.score.draw();\n\n    window.setTimeout( function() { ShootyShoot.drawScoreboard(); }, 500);\n};\n\n/*\n|\n|   hit\n|\n*/\nShootyShoot.hit = function( items )\n{\n    this.enemy.hit( items.enemy );\n    this.shot .hit( items.shot  );\n    this.score.hit();\n};\n\n/*\n|\n|   lose\n|\n*/\nShootyShoot.lose = function()\n{\n    this.data.isPlaying = false;\n    State.set( 'lose' );\n};\n\n/*\n|\n|   win\n|\n*/\nShootyShoot.win = function()\n{\n    this.data.isPlaying = false;\n    State.set( 'win' );\n};\n\n\nwindow.ShootyShoot = ShootyShoot;\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   shot\n|\n*/\n\nvar Shot = function()\n{\n    this.data  = [];\n    this.accel = null;\n};\n\n/*\n|\n|   init\n|\n*/\nShot.prototype.init = function( z )\n{\n    this.accel = z * 0.01;\n};\n\n/*\n|\n|   launch new shot\n|\n*/\nShot.prototype.launch = function( d )\n{\n    var s = {\n        x       : d.x,\n        y       : d.y - d.r,\n        state   : 'active',\n        accel   : this.accel,\n    };\n\n    this.data.push( s );\n};\n\n/*\n|\n|   animate shots\n|\n*/\nShot.prototype.animate = function()\n{\n    this.movement();\n    this.processState();\n};\n\n/*\n|\n|   process shot movement\n|\n*/\nShot.prototype.movement = function()\n{\n    if ( !this.data[0] )\n        return false;\n\n    this.data = this.data.map( _move );\n    this.data = this.data.map( _isMiss );\n};\n\n/*\n|\n|   process shot state\n|\n*/\nShot.prototype.processState = function()\n{\n    if ( !this.data[0] )\n        return false;\n\n    for ( var i = this.data.length - 1; i >= 0; i-- )\n        processStateEach( this.data[i], this.data );\n};\n\n/*\n|\n|   set a shots state as 'hit'\n|\n*/\nShot.prototype.hit = function( i )\n{\n    this.data[i].state = 'hit';\n};\n\n/*\n|\n|   helper function used in Shot.prototype.movement()\n|\n*/\nvar _move = function( i )\n{\n    i.y = i.y - i.accel;\n\n    return i;\n};\n\n/*\n|\n|   helper function used in Shot.prototype.movement()\n|\n*/\nvar _isMiss = function( i )\n{\n    if ( i.y < 0 )\n        i.state = 'miss';\n\n    return i;\n};\n\n/*\n|\n|   helper function used in Shot.prototype.processState()\n|\n*/\nvar processStateEach = function( i, data )\n{\n    if (\n        i.state == 'miss' ||\n        i.state == 'hit'\n    )\n        data.splice( i, 1 );\n};\n\nwindow.Shot = Shot;\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   state\n|\n|   ...manage which pane should be visible\n|\n*/\n\nvar State = {\n\n    current : '',\n\n    //\n    //  the available panes\n    //  'id' describes the element pane\n    //  'display' describes the display method for pane\n    //\n    available : [\n        {\n            id      : 'shooty-shoot',\n            display : 'flex',\n        },\n        {\n            id      : 'home',\n            display : 'flex',\n        },\n        {\n            id      : 'lose',\n            display : 'flex',\n        },\n        {\n            id      : 'win',\n            display : 'flex',\n        },\n    ],\n};\n\n/*\n|\n|   set new state\n|\n*/\nState.set = function( s )\n{\n    for ( var i = this.available.length - 1; i >= 0; i-- )\n    {\n        if ( this.available[i].id == s )\n            this.apply( this.available[i] );\n    }\n};\n\n/*\n|\n|   apply new state\n|\n|   ...used in State.set()\n|\n*/\nState.apply = function( s )\n{\n    this.current = s.id;\n\n    this.clear();\n\n    document\n        .getElementById( s.id )\n        .style\n        .display = s.display;\n};\n\n/*\n|\n|   undisplay all panes\n|\n|   ...used in State.apply()\n|\n*/\nState.clear = function()\n{\n    for ( var i = this.available.length - 1; i >= 0; i-- )\n        document\n            .getElementById( this.available[i].id )\n            .style.display = 'none';\n};\n\nwindow.State = State;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   views\n|\n|   ...canvas templates for each piece of the game\n|\n*/\n\nvar view = {};\n\n/*\n|\n|   shooter\n|\n*/\nview.shooter = function( d, ctx )\n{\n    ctx.beginPath();\n    ctx.fillStyle = 'rgba( 126, 192, 238, '+ d.currentOpacity +' )';\n    ctx.arc( d.x, d.y, d.r, 0, 2 * Math.PI );\n    ctx.fill();\n};\n\n/*\n|\n|   enemies\n|\n*/\nview.enemies = function( d, ctx )\n{\n    for ( var i = d.length - 1; i >= 0; i-- )\n        enemy( d[i], ctx );\n};\n\n/*\n|\n|   enemy\n|\n|   ...used by view.enemies()\n|\n*/\nvar enemy = function( i, ctx )\n{\n    ctx.beginPath();\n    ctx.fillStyle = 'rgba( 255, 99, 71, 0.5 )';\n    ctx.arc( i.x, i.y, i.r, 0, 2 * Math.PI );\n    ctx.fill();\n};\n\n/*\n|\n|   shots\n|\n*/\nview.shots = function( d, ctx )\n{\n    for ( var i = d.length - 1; i >= 0; i-- )\n        shot( d[i], ctx );\n};\n\n/*\n|\n|   shot\n|\n|   ...used by view.shots()\n|\n*/\nvar shot = function( i, ctx )\n{\n    ctx.beginPath();\n    ctx.fillStyle = 'white';\n    ctx.rect( i.x, i.y, 5, 5 );\n    ctx.fill();\n};\n\nwindow.view = view;\n})();\n\n// EOF\n"],"sourceRoot":"/source/"}