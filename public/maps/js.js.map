{"version":3,"sources":["collision.js","data.js","enemy.js","global.js","home.js","init.js","score.js","shooter.js","shot.js","state.js","utility.js"],"names":["Collision","check","Enemy","data","enemies","length","i","enemyBottom","y","r","shooterTop","Shooter","this","_shooterCollision","Shot","j","_shotCollision","shot","sI","enemy","eI","enemyEdge","top","bottom","left","x","right","hit","G","lose","state","Score","window","Data","rowN","colN","moveMultp","rowWmultp","shiftWmultp","val","rowW","shiftW","shiftH","enemyR","shiftV","xDelta","yDelta","movingRight","movingDown","score","initEnemies","shots","hits","accuracy","init","self","_","cloneDeep","z","speed","enemiesAndGapsN","defaultX","defaultY","n","setRow","setEnemies","push","draw","ctx","win","iDwn","_adjustEnemy","_drawEnemy","_deactivate","beginPath","fillStyle","arc","Math","PI","fill","splice","isPlaying","el","game","document","getElementById","canvas","home","homeH1","querySelector","homePlayBtn","els","playBtns","getElementsByClassName","keyLeft","keyRight","keyShoot","p","Promise","resolve","reject","State","set","current","then","setZ","Home","removeListeners","requestAnimationFrame","drawCanvas","offsetWidth","getContext","width","height","clearRect","play","addListeners","addEventListener","keyDown","keyUp","playHover","playUnHover","removeEventListener","ev","keyCode","keyInstructions","action","forEach","classList","add","remove","U","reload","_playBtnListeners","btns","btn","_setElText","setGetAccuracy","setTimeout","_calcPercentage","actual","possible","round","txt","textContent","wMultp","defaultOpacity","shootOpacity","currentOpacity","moveLeft","moveRight","shooting","delayShot","shoot","newX","engageDelay","launch","releaseDelay","_drawEach","_isMiss","_drawShot","rect","available","id","display","s","apply","clear","style","loop","a","location","arr","fn"],"mappings":"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","file":"js.js","sourcesContent":["(function(){ 'use strict';\n\n/*\n|\n|   collision\n|\n|   ...determine if enemy collided with either a shot or the shooter\n|\n*/\n\nvar Collision = {};\n\nCollision.check = function()\n{\n    if ( !Enemy.data.enemies.length )\n        return false;\n\n    for ( var i = Enemy.data.enemies.length - 1; i >= 0; i-- )\n    {\n        //\n        //  player loses if enemyBottom reaches shooterTop\n        //\n        var enemyBottom = Enemy.data.enemies[i].y + Enemy.data.enemies[i].r,\n            shooterTop  = Shooter.y - Shooter.r;\n\n        this._shooterCollision( enemyBottom, shooterTop );\n\n        //\n        //  just stop here if no currently active shots\n        //\n        if ( !Shot.data.length )\n            continue;\n\n        //\n        //  check for hits ...enemy and shot collisions\n        //\n        for ( var j = Shot.data.length - 1; j >= 0; j-- )\n            this._shotCollision( Shot.data[j], j, Enemy.data.enemies[i], i );\n    }\n};\n\n/*\n|\n|   shot collision\n|\n|   ...determine if enemy collided with a shot\n|\n*/\nCollision._shotCollision = function( shot, sI, enemy, eI )\n{\n    var enemyEdge = {};\n    enemyEdge.top    = enemy.y - enemy.r;\n    enemyEdge.bottom = enemy.y + enemy.r;\n    enemyEdge.left   = enemy.x - enemy.r;\n    enemyEdge.right  = enemy.x + enemy.r;\n\n    //\n    //  return false if shot missed all enemies\n    //\n    if ( shot.y < enemyEdge.top)\n        return false;\n\n    if ( shot.y > enemyEdge.bottom )\n        return false;\n\n    if ( shot.x < enemyEdge.left )\n        return false;\n\n    if ( shot.x > enemyEdge.right )\n        return false;\n\n    //\n    //  no misses means there was a hit\n    //\n    Collision.hit( sI, eI );\n};\n\n/*\n|\n|   shot collision\n|\n|   ...determine if enemy collided with the shooter\n|\n*/\nCollision._shooterCollision = function( enemyBottom, shooterTop )\n{\n    if ( enemyBottom > shooterTop )\n        G.lose();\n};\n\n/*\n|\n|   hit\n|\n|   ...record a collision between shot and enemy\n|\n*/\nCollision.hit = function( sI, eI )\n{\n    Shot .data[sI].state = 'hit';\n    Enemy.data.enemies[eI].state = 'dead';\n    Score.hit();\n};\n\n/*\n|\n|   a gift for window\n|\n*/\nwindow.Collision = Collision;    \n\n})();\n\n// EOF","(function(){ 'use strict';\n\n/*\n|\n|   data model\n|\n*/\n\nvar Data = {\n\n    enemy : {\n\n        //\n        //  number of rows\n        //\n        rowN : 5,\n\n        //\n        //  number of enemies in each row\n        //\n        colN : 10,\n\n        //\n        //  enemy movement speed multiplier\n        //\n        moveMultp : 0.008,\n\n        //\n        //  row width multiplier and shift width multiplier should add up to 1\n        //\n        rowWmultp   : 0.7,\n        shiftWmultp : 0.3,\n\n        //\n        //  data for state of each enemy\n        //\n        enemies : [],\n\n        //\n        //  values set initially and during play\n        //\n        val : {\n\n            //\n            //  values set by sizer()\n            //\n            rowW    : 0,\n            shiftW  : 0,\n            shiftH  : 0,\n            enemyR  : 0,\n            shiftV  : 0,\n\n            //\n            //  track enemy shift direction\n            //\n            xDelta      : 0,\n            yDelta      : 0,\n            movingRight : true,\n            movingDown  : false,\n        }\n    },\n\n    shot : [],\n\n    score : {\n        initEnemies : 0,\n        enemies     : 0,\n        shots       : 0,\n        hits        : 0,\n        accuracy    : 0,\n    },\n};\n\n/*\n|\n|   a gift for window\n|\n*/\nwindow.Data = Data;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   enemy\n|\n|   ...boooo\n|\n*/\n\nvar Enemy = {\n\n    /*\n    this data set by init()\n\n    data to expect...\n\n    rowN (int)\n    colN (int)\n    moveMultp (float)\n    rowWmultp (float)\n    shiftWmultp (float)\n    enemies (array)\n\n    val (obj)\n        rowW (float)\n        shiftW (float)\n        shiftH (float)\n        enemyR (float)\n        shiftV (float)\n        xDelta (float)\n        yDelta (float)\n        movingRight (bool)\n        movingDown (bool)\n    */\n    data : {},\n};\n\n/*\n|\n|   init\n|\n*/\nEnemy.init = function()\n{\n    var self = Enemy;\n\n    //\n    //  load data from data model\n    //\n    self.data = _.cloneDeep( Data.enemy );\n\n    //\n    //  set global enemy values\n    //\n    self.data.val.rowW   = G.z * self.data.rowWmultp;\n    self.data.val.shiftW = G.z * self.data.shiftWmultp;\n    self.data.val.shiftV = self.data.moveMultp * G.z * G.speed;\n    \n    var enemiesAndGapsN = ( self.data.colN * 2 ) - 1;  \n    self.data.val.enemyR = ( self.data.val.rowW / enemiesAndGapsN ) / 2;\n\n    self.data.val.shiftH = self.data.val.enemyR;\n\n    //\n    //  default values for each enemy\n    //\n    var x = self.data.val.enemyR,\n        y = self.data.val.enemyR,\n        r = self.data.val.enemyR,\n        defaultX = x,\n        defaultY = y;\n\n    //\n    //  initialize each enemy\n    //\n    for ( var n = self.data.rowN - 1; n >= 0; n-- )\n    {\n        for ( var i = self.data.colN - 1; i >= 0; i-- )\n        {\n            self.setRow( x, y, r );        \n            x = x + ( r * 4 );\n        }\n\n        x = defaultX;\n        y = defaultY + ( r * 4 * n );\n    }\n\n    //\n    //  notify scoreboard, total # of enemies\n    //\n    Score.setEnemies( self.data.rowN * self.data.colN );\n};\n\n/*\n|\n|   set row\n|\n|   ...initialize data for row of enemies\n|\n*/\nEnemy.setRow = function( x, y, r )\n{\n    var enemy = {\n            x : x,\n            y : y,\n            r : r,\n            state : 'active',\n        };\n\n    this.data.enemies.push( enemy );\n};\n\n/*\n|\n|   draw\n|\n|   ...start drawing all enemies\n|\n*/\nEnemy.draw = function( ctx )\n{\n    if ( !this.data.enemies[0] )\n    {\n        G.win();\n        return false;\n    }\n\n    if ( this.data.val.movingDown )\n    {\n        this.data.val.yDelta = this.data.val.yDelta + this.data.val.shiftV;\n\n        if ( this.data.val.yDelta >= this.data.val.shiftH )\n        {\n            this.data.val.movingDown = false;\n            this.data.val.yDelta = 0;\n        }\n\n        for ( var iDwn = this.data.enemies.length - 1; iDwn >= 0; iDwn-- )\n            this._adjustEnemy( this.data.enemies[iDwn], ctx, iDwn, this.data.enemies, this.data.val.shiftV ); \n    }\n    else\n    {\n        this.data.val.xDelta = this.data.val.xDelta + this.data.val.shiftV;\n\n        if ( this.data.val.xDelta >= this.data.val.shiftW )\n        {\n            this.data.val.movingRight = !this.data.val.movingRight;\n            this.data.val.xDelta = 0;\n            this.data.val.movingDown = true;\n        }\n\n        for ( var i = this.data.enemies.length - 1; i >= 0; i-- )\n            this._adjustEnemy( this.data.enemies[i], ctx, i, this.data.enemies, this.data.val.shiftV );\n    }\n};\n\n/*\n|\n|   adjust enemy\n|\n|   ...movement and state adjustments for each frame\n|\n*/\nEnemy._adjustEnemy = function( enemy, ctx, i, enemies, shiftV )\n{\n    //\n    // movement\n    //\n    if ( this.data.val.movingDown )\n        enemy.y = enemy.y + shiftV;\n\n    else if ( this.data.val.movingRight )\n        enemy.x = enemy.x + shiftV;\n\n    else\n        enemy.x = enemy.x - shiftV;\n\n    //\n    //  state\n    //\n    if ( enemy.state == 'active' )\n        this._drawEnemy( enemy, ctx );\n\n    else if ( enemy.state == 'dead' )\n        this._deactivate( i, enemies );\n\n    else\n        this._deactivate( i, enemies );\n};\n\n/*\n|\n|   draw enemy\n|\n|   ...draw enemy on the canvas\n|\n*/\nEnemy._drawEnemy = function( enemy, ctx )\n{\n    ctx.beginPath();\n    ctx.fillStyle = 'rgba( 255, 99, 71, 0.5 )';\n    ctx.arc( enemy.x, enemy.y, enemy.r, 0, 2 * Math.PI );\n    ctx.fill();\n};\n\n/*\n|\n|   deactivate\n|\n|   ...when hit,\n|       an enemy must be sent to a farm upstate\n|       to live out it's final days frolicing in the country side.\n|\n*/\nEnemy._deactivate = function( i, enemies )\n{\n    enemies.splice( i, 1 );\n};\n\n/*\n|\n|   a gift for window\n|\n*/\nwindow.Enemy = Enemy;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   global\n|\n|   ...main object for controlling the game\n|\n*/\n\nvar G = {\n\n    //\n    //  global game speed\n    //\n    speed : 0.3,\n\n    // \n    // values\n    //\n    isPlaying   : false,\n    z           : 0,\n    top         : 0,\n    left        : 0,\n\n    //\n    //  elements\n    //\n    el : {\n        game    : document.getElementById( 'shooty-shoot' ),\n        score   : document.getElementById( 'score' ),\n        canvas  : document.getElementById( 'shooty-shoot-canvas' ),\n        home    : document.getElementById( 'home' ),\n        lose    : document.getElementById( 'lose' ),\n        win     : document.getElementById( 'win' ),\n\n        homeH1      : document.querySelector( '#home h1' ),\n        homePlayBtn : document.getElementById( 'home-play-btn' ),\n    },\n    els : {\n        playBtns : document.getElementsByClassName( 'play-btn'),\n        shots    : document.getElementsByClassName( 'shots' ),\n        hits     : document.getElementsByClassName( 'hits' ),\n        accuracy : document.getElementsByClassName( 'accuracy' ),\n        keyLeft  : document.getElementsByClassName( 'key-left' ),\n        keyRight : document.getElementsByClassName( 'key-right' ),\n        keyShoot : document.getElementsByClassName( 'key-shoot' ),\n    },\n};\n\n/*\n|\n|   init\n|\n*/\nG.init = function()\n{\n    //\n    //  promise that first displays game elements in dom\n    //\n    var p = new Promise(function(resolve, reject)\n    {\n        State.set( 'shooty-shoot' );\n\n        if ( State.current == 'shooty-shoot' )\n            resolve('Success!');\n\n        else\n            reject('Failure!');\n    });\n\n    //\n    //  things to do after the State.set() promise\n    //\n    p.then( G.setZ )\n        .then( Home.removeListeners )\n        .then( Enemy.init )\n        .then( Shooter.init )\n        .then( Shot.init )\n        .then( function() {\n            G.isPlaying = true;\n        })\n        .then( function() {\n            window.requestAnimationFrame( G.drawCanvas );            \n        })\n        .then( Score.init );\n};\n\n/*\n|\n|   set z\n|\n|   ...(it's a new promise)\n|\n*/\nG.setZ = function()\n{\n    G.z = G.el.canvas.offsetWidth;\n};\n\n/*\n|\n|   draw canvas\n|\n|   ...the primary controller for drawing to canvas\n|\n*/\nG.drawCanvas = function()\n{\n    var ctx = G.el.canvas.getContext( '2d' );\n\n    ctx.canvas.width  = G.z;\n    ctx.canvas.height = G.z;\n\n    ctx.clearRect( 0, 0, G.z, G.z ); // clear canvas\n\n    //\n    //  check for all possible collisions\n    //\n    Collision.check();\n\n    //\n    //  draw the elements\n    //\n    Enemy.draw( ctx );\n    Shooter.draw( ctx );\n    Shot.draw( ctx );\n\n    //\n    //  draw next frame\n    //\n    if ( G.isPlaying )\n        window.requestAnimationFrame( G.drawCanvas );\n};\n\n/*\n|\n|   play\n|\n|   ...do all the things needed to start the game\n|\n*/\nG.play = function()\n{\n    G.init();   \n};\n\n/*\n|\n|   win\n|\n|   ...do all the things needed the game has been won\n|\n*/\nG.win = function()\n{\n    G.isPlaying = false;\n    State.set( 'win' );\n};\n\n/*\n|\n|   lose\n|\n|   ...do all the things needed the game has been lost\n|\n*/\nG.lose = function()\n{\n    G.isPlaying = false;\n    State.set( 'lose' );\n};\n\nwindow.G = G;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   home\n|\n|   ...\n|\n*/\n\nvar Home = {\n\n    //\n    //\n    //\n    addListeners : function()\n    {\n        window.addEventListener( 'keydown', Home.keyDown );\n        window.addEventListener( 'keyup', Home.keyUp );\n        G.el.homePlayBtn.addEventListener( 'mouseover', Home.playHover );\n        G.el.homePlayBtn.addEventListener( 'mouseout', Home.playUnHover );\n    },\n\n    //\n    //\n    //\n    removeListeners : function()\n    {\n        window.removeEventListener( 'keydown', Home.keyDown );\n        window.removeEventListener( 'keyup', Home.keyUp );\n        G.el.homePlayBtn.removeEventListener( 'mouseover', Home.playHover );\n        G.el.homePlayBtn.removeEventListener( 'mouseout', Home.playUnHover );\n    },\n};\n\n/*\n|\n|   key press\n|\n*/\nHome.keyDown = function( ev )\n{\n    //\n    //  left key\n    //\n    if ( ev.keyCode == 37 )\n        Home.keyInstructions( 'press', G.els.keyLeft );\n\n    //\n    // right key\n    //\n    if ( ev.keyCode == 39 )\n        Home.keyInstructions( 'press', G.els.keyRight );\n\n    //\n    // ctrl & space keys\n    //\n    if ( ev.keyCode == 17 || ev.keyCode == 32 )\n        Home.keyInstructions( 'press', G.els.keyShoot );\n};\n\n/*\n|\n|   key release\n|\n*/\nHome.keyUp = function( ev )\n{\n    //\n    //  left key\n    //\n    if ( ev.keyCode == 37 )\n        Home.keyInstructions( 'release', G.els.keyLeft );\n\n    //\n    // right key\n    //\n    if ( ev.keyCode == 39 )\n        Home.keyInstructions( 'release', G.els.keyRight );\n\n    //\n    // ctrl & space keys\n    //\n    if ( ev.keyCode == 17 || ev.keyCode == 32 )\n        Home.keyInstructions( 'release', G.els.keyShoot );\n};\n\n/*\n|\n|\n|\n*/\nHome.keyInstructions = function( action, els )\n{\n    if ( action == 'press' )\n    {\n        _(els).forEach(function( el )\n        {\n            el.classList.add( 'highlight' );\n        });\n    }\n    else\n    {\n        _(els).forEach(function( el )\n        {\n            el.classList.remove( 'highlight' );\n        });\n    }\n};\n\n/*\n|\n|\n|\n*/\nHome.playHover = function()\n{\n    G.el.homeH1.classList.add( 'home-h1-highlight' );\n};\n\n/*\n|\n|\n|\n*/\nHome.playUnHover = function()\n{\n    G.el.homeH1.classList.remove( 'home-h1-highlight' );\n};\n\n/*\n|\n|   a gift for window\n|\n*/\nwindow.Home = Home;    \n\n})();\n\n// EOF","(function(){ 'use strict';\n\n/*\n|\n|   get the party started\n|\n*/\nvar init = function()\n{\n    //\n    //  if window is resized, just reload and start over\n    //\n    window.addEventListener( 'resize', U.reload );\n\n    //\n    //  button listeners\n    //\n    _playBtnListeners( G.els.playBtns );\n\n    //\n    //  keys instructions listeners for home pane\n    //\n    Home.addListeners();\n\n    //\n    //  display home pane\n    //\n    State.set( 'home' );\n\n    //\n    //  init() is complete\n    //  cleanup the DOMContentLoaded listener\n    //\n    document.removeEventListener( \"DOMContentLoaded\", init );\n};\n\n/*\n|\n|   listeners for buttons outside of the game\n|\n*/\nvar _playBtnListeners = function( btns )\n{\n    _(btns).forEach(function( btn )\n    {\n        btn.addEventListener( 'click', G.play );\n    });\n};\n\n/*\n|\n|   hello browser.  please accept this code.  thx!\n|\n*/\ndocument.addEventListener( 'DOMContentLoaded', init );\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   score\n|\n|   ...track score board stats\n|\n*/\n\nvar Score = {\n\n    /*\n    this data set by init()\n\n    data to expect...\n\n    initEnemies (int)\n    enemies     (int)\n    shots       (int)\n    hits        (int)\n    accuracy    (int)\n    */\n    data : {},\n};\n\n/*\n|\n|   init\n|\n*/\nScore.init = function()\n{\n    Score.data = _.cloneDeep( Data.score );\n    Score.draw();\n};\n\n/*\n|\n|   draw\n|\n|   ...display score stats in scoreboard\n|\n*/\nScore.draw = function()\n{\n    Score._setElText( G.els.shots, Score.data.shots );\n    Score._setElText( G.els.hits, Score.data.hits );\n    Score._setElText( G.els.accuracy, Score.setGetAccuracy() );\n\n    window.setTimeout( function() { Score.draw(); }, 500);\n};\n\n/*\n|\n|   set enemies\n|\n*/\nScore.setEnemies = function( n )\n{\n    this.data.initEnemies = n;\n    this.data.enemies     = n;\n\n    return this.data.enemies;\n};\n\n/*\n|\n|   shot\n|\n|   ...record a new shot\n|\n*/\nScore.shot = function()\n{\n    this.data.shots++;\n    return this.data.shots;\n};\n\n/*\n|\n|   hit\n|\n|   ...record a new hit\n|\n*/\nScore.hit = function()\n{\n    this.data.hits++;\n    this.data.enemies--;\n\n    return this.data.hits;\n};\n\n/*\n|\n|   set/get accuracy\n|\n|   ...determine current accuracy and return that\n|\n*/\nScore.setGetAccuracy = function()\n{\n    //\n    //  avoid zero divided by zero\n    //\n    if ( !this.data.shots )\n        return this.data.accuracy;\n\n    //\n    //  ok, do the thing\n    //\n    this.data.accuracy = this._calcPercentage( this.data.hits, this.data.shots );\n\n    return this.data.accuracy;\n};\n\n/*\n|\n|   calculate percentage\n|\n*/\nScore._calcPercentage = function( actual, possible )\n{\n    var p = actual / possible;\n\n    p = p * 100;\n    p = Math.round( p );\n\n    return p;\n};\n\n/*\n|\n|   set element text\n|\n|   ...apply to scoreboard dom elements\n|\n*/\nScore._setElText = function( els, txt )\n{\n    for ( var i = els.length - 1; i >= 0; i-- )\n        els[i].textContent = txt;\n\n    return txt;\n};\n\n/*\n|\n|   a gift for window\n|\n*/\nwindow.Score = Score;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   shooter\n|\n|   ...brrap brrap pew pew\n|\n*/\n\nvar Shooter = {\n\n    //\n    // multipliers\n    //\n    wMultp      : 0.05,\n    moveMultp   : 0.01,\n\n    //\n    //  values set by this.init()\n    //\n    x : 0,\n    y : 0,\n    r : 0,\n\n    //\n    //  opacity\n    //\n    defaultOpacity  : 0.5,\n    shootOpacity    : 0.7,\n    currentOpacity  : 0.5,\n\n    //\n    // actions\n    //\n    moveLeft    : false,\n    moveRight   : false,\n    shooting    : false,\n    delayShot   : false,\n};\n\n/*\n|\n|   init\n|\n|   ...set values and add listeners\n|\n*/\nShooter.init = function()\n{\n    var self = Shooter;\n\n    self.r = G.z * self.wMultp;\n    self.x = ( G.z / 2 );\n    self.y = G.z - self.r - 1;\n\n    window.addEventListener( 'keydown', self.keyDown );\n    window.addEventListener( 'keyup', self.keyUp );\n};\n\n/*\n|\n|   draw\n|\n|   ...analyze the state of things, adjust as needed, then draw\n|\n*/\nShooter.draw = function( ctx )\n{\n    //\n    //  prepare to draw\n    //\n    ctx.beginPath();\n    ctx.fillStyle = 'rgba( 126, 192, 238, '+this.currentOpacity+' )';\n\n    //\n    //  analyze actions\n    //\n    if ( this.moveLeft )\n        this.left();\n\n    if ( this.moveRight )\n        this.right();\n\n    if ( this.shooting )\n        this.shoot( ctx );\n\n    if ( this.currentOpacity > this.defaultOpacity )\n        this.currentOpacity = this.currentOpacity - 0.01;\n\n    //\n    //  draw\n    //\n    ctx.arc( this.x, this.y, this.r, 0, 2 * Math.PI );\n    ctx.fill();\n};\n\n/*\n|\n|   key press\n|\n*/\nShooter.keyDown = function( ev )\n{\n    //\n    //  left key\n    //\n    if ( ev.keyCode == 37 )\n        Shooter.moveLeft = true;\n\n    //\n    // right key\n    //\n    if ( ev.keyCode == 39 )\n        Shooter.moveRight = true;\n\n    //\n    // ctrl & space keys\n    //\n    if ( ev.keyCode == 17 || ev.keyCode == 32 )\n        Shooter.shooting = true;\n};\n\n/*\n|\n|   key release\n|\n*/\nShooter.keyUp = function( ev )\n{\n    //\n    //  left key\n    //\n    if ( ev.keyCode == 37 )\n        Shooter.moveLeft = false;\n\n    //\n    // right key\n    //\n    if ( ev.keyCode == 39 )\n        Shooter.moveRight = false;\n\n    //\n    // ctrl & space keys\n    //\n    if ( ev.keyCode == 17 || ev.keyCode == 32 )\n        Shooter.shooting = false;\n};\n\n/*\n|\n|   left\n|\n|   ...move shooter\n|\n*/\nShooter.left = function()\n{\n    var newX = this.x - ( G.z * this.moveMultp );\n\n    if ( newX - this.r >= 1 )\n        this.x = newX ;\n};\n\n/*\n|\n|   right\n|\n|   ...move shooter\n|\n*/\nShooter.right = function()\n{\n    var newX = this.x + ( G.z * this.moveMultp );\n\n    if ( newX + this.r <= G.z - 1 )\n        this.x = newX;\n};\n\n/*\n|\n|   shoot\n|\n*/\nShooter.shoot = function( ctx )\n{\n    if ( this.delayShot )\n        return false;\n\n    this.engageDelay();\n\n    this.currentOpacity = this.shootOpacity;\n    Shot.launch( this.x, this.y - this.r );\n};\n\n/*\n|\n|   engage delay\n|\n|   ...delay shots a bit, no need to shoot on every frame\n|\n*/\nShooter.engageDelay = function()\n{\n    this.delayShot = true;\n    window.setTimeout( this.releaseDelay, 300);\n};\n\n/*\n|\n|   release delay\n|\n*/\nShooter.releaseDelay = function()\n{        \n    Shooter.delayShot = false;\n};\n\n/*\n|\n|   a gift for window\n|\n*/\nwindow.Shooter = Shooter;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   shot\n|\n|   ...our shots/projectiles that will hurled at enemies\n|\n*/\n\nvar Shot = {\n    data : [],\n};\n\n/*\n|\n|   init\n|\n*/\nShot.init = function()\n{\n    Shot.data = _.cloneDeep( Data.shot );\n};\n\n/*\n|\n|   launch\n|\n|   ...initialize a shot\n|\n*/\nShot.launch = function( x, y )\n{\n    var shot = {\n        x : x,\n        y : y,\n        state : 'active',\n    };\n\n    this.data.push( shot );\n\n    //\n    //  notifiy score board\n    //\n    Score.shot();\n};\n\n/*\n|\n|   draw\n|\n|   ...draw current shots\n|\n*/\nShot.draw = function( ctx )\n{\n    if ( !this.data[0] )\n        return false;\n\n    for ( var i = this.data.length - 1; i >= 0; i-- )\n        _drawEach( this.data[i], i, this.data, ctx );\n};\n\n/*\n|\n|   draw each\n|\n|   ...analyze current state of each shot and draw appropriately\n|\n*/\nvar _drawEach = function( shot, i, data, ctx )\n{\n    shot.y     = shot.y - ( G.z * 0.01 );\n    shot.state = _isMiss( shot );\n\n    if ( shot.state == 'active' )\n        _drawShot( ctx, shot );\n\n    else if ( shot.state == 'miss' )\n        _deactivate( i, data );\n\n    else if ( shot.state == 'hit' )\n        _deactivate( i, data );\n\n    else\n        _deactivate( i, data );\n};\n\n/*\n|\n|   is miss\n|\n|   ...look for misses\n|\n*/\nvar _isMiss = function( shot )\n{\n    if ( shot.y < 0 )\n        return 'miss';\n\n    return shot.state;\n};\n\n/*\n|\n|   draw shot\n|\n|   ...draw shot on the canvas\n|\n*/\nvar _drawShot = function( ctx, shot )\n{\n    ctx.beginPath();\n    ctx.fillStyle = 'white';\n    ctx.rect( shot.x, shot.y, 5, 5 );\n    ctx.fill();\n};\n\n/*\n|\n|   deactivate\n|\n|   ...shot goes away when either hits or misses enemies\n|\n*/\nvar _deactivate = function( i, data )\n{\n    data.splice( i, 1 );\n};\n\n/*\n|\n|   a gift for window\n|\n*/\nwindow.Shot = Shot;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   state\n|\n|   ...mostly just manage which pane should be visible\n|\n*/\n\nvar State = {\n\n    current : '',\n\n    //\n    //  the available panes\n    //  'id' describes the element pane\n    //  'display' describes the display method for pane\n    //\n    available : [\n        {\n            id      : 'shooty-shoot',\n            display : 'flex',\n        },\n        {\n            id      : 'home',\n            display : 'flex',\n        },\n        {\n            id      : 'lose',\n            display : 'flex',\n        },\n        {\n            id      : 'win',\n            display : 'flex',\n        },\n    ],\n};\n\nState.set = function( s )\n{\n    for (var i = this.available.length - 1; i >= 0; i--) {\n        if ( this.available[i].id == s )\n            this.apply( this.available[i] );\n    }\n};\n\nState.apply = function( s )\n{\n    this.current = s.id;\n\n    this.clear();\n\n    document\n        .getElementById( s.id )\n        .style\n        .display = s.display;\n};\n\nState.clear = function()\n{\n    U.loop(\n        this.available,\n        function( a )\n        {\n            var el = document.getElementById( a.id );\n\n            el.style.display = 'none';\n        });\n};\n\nwindow.State = State;\n\n})();\n\n// EOF\n","(function(){ 'use strict';\n\n/*\n|\n|   utility\n|   \n|   ...reusable helper functions\n|\n*/\n\nvar U = {};\n\n/*\n|\n|   reload the whole thing\n|\n*/\nU.reload = function()\n{\n    window.location.reload();\n};\n\n/*\n|\n|   for loop\n|\n*/\nU.loop = function( arr, fn )\n{\n    for ( var i = arr.length - 1; i >= 0; i-- )\n        fn( arr[i] );\n};\n\nwindow.U = U;\n\n})();\n\n// EOF\n"],"sourceRoot":"/source/"}